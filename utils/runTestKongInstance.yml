#docker compose file which will run a kong instance (and konga) to test against
# execute "docker stack deploy --compose-file=runTestKongInstance.yml kongtest"
# kong normal endpoints are on ports 79 and 443
# kong Admin API runs on port 81
#  test it:  http://HOSTNAME:81/status
# Konga Admin instance runs on port 1337

version: "3.1"

services:
  kong-database:
    image: postgres:9.4
    deploy:
      restart_policy:
        condition: any
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong:0.12.0
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
    command: kong migrations up
    deploy:
      restart_policy:
        condition: on-failure

  kong:
    image: kong:0.12.0
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    ports:
      - 81:8001
      - 79:8000
      - 443:8443
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8000 || exit 1"]
      interval: 5s
      retries: 10

  konga:
    image: pantsel/konga
    deploy:
      restart_policy:
        condition: on-failure
    ports:
     - 1337:1337

  #Sample hello world services
  helloworldservice:
    image: metcarob/flaskappimage
    deploy:
      restart_policy:
        condition: on-failure

  #Configure kong to forward requests to flaskapp
  kong-addapis-flaskapp:
    image: byrnedo/alpine-curl
    deploy:
      restart_policy:
        condition: on-failure
        delay: 6s
    entrypoint: "/bin/sh"
    command:    "-c \" \
                   (curl -i -X POST \
                     --url http://kong:8001/apis/ \
                     --data 'name=helloworldservice' \
                     --data 'uris=/helloworldservice' \
                     --data 'upstream_url=http://helloworldservice:80' \
                     --data 'https_only=false') && \
                   (curl -i -X POST \
                     --url http://kong:8001/apis/helloworldservice/plugins \
                     --data 'name=jwt' \
                     --data 'config.secret_is_base64=true' \
                     --data 'config.claims_to_verify=exp') && \
                   (curl -i -X POST \
                     --url http://kong:8001/apis/helloworldservice/plugins \
                     --data 'name=acl' \
                     --data 'config.whitelist=soa_tech_monitoring') \
               \""